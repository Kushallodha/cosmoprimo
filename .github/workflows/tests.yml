name: Run Pytests
on:
  push:
    paths: ['.github/**', 'desilike/**', 'tests/**', 'pyproject.toml']
  pull_request:
    paths: ['.github/**', 'desilike/**', 'tests/**', 'pyproject.toml']
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          - os: macos-latest
            python-version: "3.9"
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip wheels
      uses: actions/cache@v4
      with:
        path: ${{ runner.os == 'Linux' && '~/.cache/pip' || '~/Library/Caches/pip' }}
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: ${{ runner.os }}-pip-${{ matrix.python-version }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install "numpy<2.0.0"
        pip install ruff matplotlib pytest pytest-cov requests cobaya
    - name: Lint with ruff
      run: |
        # TODO: Ultimately, all checks should work.
        ruff check cosmoprimo --ignore E701,E721,F401,E711,F811,E402,F841,E714,E731,F541,F405,F403,E722,F523,E741,F601,E401,E713,F524
    - name: Test with pytest
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt install libopenmpi-dev
        else
          brew install openmpi
          brew install libomp
        fi
        pip install -e .[class,camb,astropy,jax,extras]
        # TODO: Currently, we need to specify the directory. This should not be necessary in the future once all tests are compatible with pytest.
        pytest cosmoprimo/tests/ -v --cov=cosmoprimo --durations=0 --cov-report lcov
    - name: Coverage with Coveralls
      if: ${{ success() && ( matrix.python-version == '3.13' ) && ( matrix.os == 'ubuntu-latest' ) }}
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: coverage.lcov
